#if 'кошка'.endswith(('а','б','в')): двойные скобочки, можно несколько значений залить
#Модули в Питоне
#math
#os, shutil
#нельзя называть вещи как модуль
#re.py нельзя назвать программу
#экслэш - экранирующий символ(escape character)
#\t - табуляция
#\n - новая строка
#\' и \" - кавычки
#r'home\user\text.txt (r - raw string)

#Регулярные выражения
#Регулярные выражения - выражения на спец языке, позволяющие искать нужные фрагменты текста
#|(vertical bar) - "или"
#?(question mark) - предыдущего символа может и не быть
#скобки(parentheses) - используются для группировки
#H(a|ae?)ndel
#Модуль для рег выражений re
#import re
#Часть строки, подходящая под ркгулярное выражение - match
#Часть р.в., ограниченная скобками, называется группой (group)
#* - предыдущий символ или группа, повторённые любое кол-во раз (включая 0)
#+ - предыдущий символ или группа, повторённые положительное кол-во раз
#.* - любое кол-во любых символов
#.* и .* захватят наибольшее количество возможных вариантов (до самого последнего)
#[...] - один из перечисленных символов (напр.:[абв])
#[...-...] - один символ из диапазона (напр.: [а-я])
#можно комбинировать: [а-яА-Яbq] (b = Ё, q = ё)
#экранирование метасимволов!!
#всё это строки, то есть надо в кавычках писать
#r "[а-яА-Яbq] + \?"
#все формы have:  ha(s|d|v(e|ing))
#Выражение, дающее совпадение на словах, имеющих хотя бы 2 слога: .*[аеёиоуыэюя].*[аеёиоуыэюя].*
#Получится ая, ааа яяя и тд
#any = '.*'
#v = '[аеё...]'
#regex = any + v + any + v + any
#месяцы (0?[1-9|1[012])

#Рег. выражения и Питон
#import re
#regex =r'\[?кот\]?'
#вводим s
#m = re.search(regex,s)
#if m != None:
#   print('Я нашел')
#   print(m.group())
#re.search перестаёт работать после того, как она нашла 1-ое вхождение в строке

#кот([ыеу]|о[мв]|э|а(х|ми?)?)? Все виды "кот"
#regCat = r"\b\кот([ыеу]|о[мв]|э|а(х|ми?)?)?\b" Слово "маскот" не будет выделяться как форма слова "кот"
#\b - это <border>

#1)Взять существительное и написать рег выражение
#2)Спрашивает слова, является ли слово формой вашего сущ.?
import re
rain = r"\b\дожд([ьюи]|е|ей|я(м|ми?)|ях|ём?)?\b"
s = input('Введите какое-нибудь слово: ')
m = re.search(rain, s)
if m != None:
    print('Это слово является формой слова "дождь"!')
else:
    print('Нетушки!')
#3)а)Есть ли в тексте хоть одна словоформа вашего слова?
#  б)Сколько раз словоформы вашего слова встретились в тексте?
#В рег выражение надо добавить заглавные буквы или во всём тексте понизить регистр
